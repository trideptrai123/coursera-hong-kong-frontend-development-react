{"ast":null,"code":"var _jsxFileName = \"C:\\\\website\\\\react\\\\coursera-hong-kong-frontend-development-react\\\\assignment1\\\\confusion\\\\src\\\\components\\\\DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\n\nclass Dishdetail extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderDish(dish) {\n    return React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      top: true,\n      src: dish.image,\n      alt: dish.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, dish.name), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, dish.description))));\n  }\n\n  renderComments(comments) {\n    if (comments != null) {\n      return React.createElement(\"div\", {\n        className: \"col-12 col-md-5 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Comments\"), React.createElement(\"ul\", {\n        className: \"list-unstyled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, comments.map(comment => {\n        return React.createElement(\"li\", {\n          key: comment.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, comment.comment), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"-- \", comment.author, \" , \", new Intl.DateTimeFormat('en-US', {\n          year: 'numeric',\n          month: 'short',\n          day: '2-digit'\n        }).format(new Date(Date.parse(comment.date)))));\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    if (this.props.dish != null) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.renderDish(this.props.dish), this.renderComments(this.props.dish.comments)));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Dishdetail;","map":{"version":3,"sources":["C:\\website\\react\\coursera-hong-kong-frontend-development-react\\assignment1\\confusion\\src\\components\\DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardImgOverlay","CardText","CardBody","CardTitle","Dishdetail","constructor","props","renderDish","dish","image","name","description","renderComments","comments","map","comment","id","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,cAAxB,EAAwCC,QAAxC,EAAkDC,QAAlD,EAA4DC,SAA5D,QAA6E,YAA7E;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAEhCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;AACF;;AAEDC,EAAAA,UAAU,CAACC,IAAD,EAAO;AACd,WACG;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,OAAD;AAAS,MAAA,GAAG,MAAZ;AAAa,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAvB;AAA8B,MAAA,GAAG,EAAED,IAAI,CAACE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYF,IAAI,CAACE,IAAjB,CADH,EAEG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWF,IAAI,CAACG,WAAhB,CAFH,CAFH,CADH,CADH;AAWF;;AAEDC,EAAAA,cAAc,CAACC,QAAD,EAAW;AACtB,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACnB,aACG;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,EAEG;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCA,QAAQ,CAACC,GAAT,CAAcC,OAAD,IAAa;AACxB,eACG;AAAI,UAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,OAAO,CAACA,OAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAOA,OAAO,CAACE,MAAf,SAA0B,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,UAAAA,IAAI,EAAE,SAAR;AAAmBC,UAAAA,KAAK,EAAE,OAA1B;AAAmCC,UAAAA,GAAG,EAAE;AAAxC,SAAjC,EAAqFC,MAArF,CAA4F,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWV,OAAO,CAACW,IAAnB,CAAT,CAA5F,CAA1B,CAFF,CADH;AAMD,OAPD,CADD,CAFH,CADH;AAeF,KAhBD,MAiBK;AACF,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH;AAGF;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACN,QAAI,KAAKrB,KAAL,CAAWE,IAAX,IAAmB,IAAvB,EAA6B;AAC1B,aACG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKD,UAAL,CAAgB,KAAKD,KAAL,CAAWE,IAA3B,CADJ,EAEI,KAAKI,cAAL,CAAoB,KAAKN,KAAL,CAAWE,IAAX,CAAgBK,QAApC,CAFJ,CADH,CADH;AAQF,KATD,MAUK;AACF,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH;AAGF;AACH;;AA7D+B;;AAgEnC,eAAeT,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\r\n    \r\nclass Dishdetail extends Component {\r\n   \r\n   constructor(props) {\r\n      super(props);\r\n   }\r\n   \r\n   renderDish(dish) {\r\n      return (\r\n         <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n               <CardImg top src={dish.image} alt={dish.name} />\r\n               <CardBody>\r\n                  <CardTitle>{dish.name}</CardTitle>\r\n                  <CardText>{dish.description}</CardText>\r\n               </CardBody>\r\n            </Card>\r\n         </div>\r\n      );\r\n   }\r\n   \r\n   renderComments(comments) {\r\n      if (comments != null) {\r\n         return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n               <h4>Comments</h4>\r\n               <ul className=\"list-unstyled\">\r\n               {comments.map((comment) => {\r\n                  return (\r\n                     <li key={comment.id}>\r\n                       <p>{comment.comment}</p>\r\n                       <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>                                      \r\n                     </li>\r\n                  );\r\n                })}\r\n                </ul>\r\n            </div>\r\n         );\r\n      }\r\n      else {\r\n         return (\r\n            <div></div>\r\n         );\r\n      }\r\n   }\r\n   \r\n   render() {\r\n      if (this.props.dish != null) {\r\n         return (\r\n            <div className=\"container\">\r\n               <div className=\"row\">\r\n                  {this.renderDish(this.props.dish)}\r\n                  {this.renderComments(this.props.dish.comments)}\r\n               </div>\r\n            </div>\r\n         );\r\n      }\r\n      else {\r\n         return (\r\n            <div></div> \r\n         );\r\n      }\r\n   }\r\n}\r\n\r\nexport default Dishdetail;"]},"metadata":{},"sourceType":"module"}